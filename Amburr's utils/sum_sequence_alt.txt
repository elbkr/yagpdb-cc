{{ $error := "Syntax *needs and is* **only one int argument**."}}
{{ if  ( eq ( len .CmdArgs ) 1 )  }}
{{ $x := 0 }}
{{ if and ( not ( userArg ( index .CmdArgs 0 ) ) ) ( $x = ( toInt ( index .CmdArgs 0 ) ) ) }}
{{ $y := add $x 1 }}
{{ $z := 0 }}
{{ range $v := ( seq 0 $x ) }}{{ $z = ( add $z  $y ) }}{{ end }}
{{ $starter := $z }}
{{ $divider := 2 }}
{{ $a := $starter }}{{ $y := toInt ( joinStr "" "-" $divider )}}{{ $c :=0 }}
{{ range $v := ( seq 0  ( add $divider $starter ) ) }}{{$c = $a}}{{$a = (add $a $y) }}{{if eq $a 0}}{{ joinStr "" $starter " divided by " $divider " equals " ( add $v 1 ) ".  And that's the sum of sequence " $x "." }}{{end}}{{ end }}
{{ else }}
{{ $error }}
{{ end }}
{{ else }}
{{ $error }}
{{ end }}
