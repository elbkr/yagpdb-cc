{{/*
	YAGPDB Downtime Announcement

	Trigger: 5 Minutes
	Trigger Type: Interval

	Note: If you set this up for the first time it will create an example downtime announcement so you can see if it works.
		  Also make sure you set up the 'Channel' when you are using an interval or else it will not work!

	Copyright: 2020 Black Wolf
	License: MIT
	Repository: https://github.com/BlackWolfWoof/yagpdb-cc/
*/}}
{{$timezone := "Europe/Berlin"}}{{/*Select your timezone here https://kevinnovak.github.io/Time-Zone-Picker/ and copy it into $timezone*/}}

{{/*Downtime*/}}
{{$dbtime := (dbGet 204255221017214977 "downtime").Value.UTC}}{{$ctime := currentTime.UTC}}{{$firsttime := ""}}
{{if not $dbtime}}
	{{$firsttime = " - ‚ùóExample‚ùó"}}
	{{$dbtime = ($ctime.UTC.Add (toDuration (mult -3510 .TimeSecond)))}}
{{end}}
{{if $dbtime.Before ($ctime.Add (toDuration (mult -8 .TimeMinute)))}}
	{{sendMessage nil (cembed
	"author" (sdict "url" "https://yagpdb.xyz/status/" "icon_url" "https://cdn.discordapp.com/emojis/705738821110595607.png" "name" (print "YAGPDB Downtime Announcement" $firsttime))
	"description" (print "YAGPDB was down for the last **‚âà " (humanizeDurationSeconds ($ctime.Sub $dbtime)) "**\n\nFrom: " ((($dbtime.In (newDate 0 0 0 0 0 0 $timezone).Location)).Format "üìÖ`02.1.06` ‚åö`15:04:05`") "\nTo:\u2003\u200A\u2005" ((($ctime.In (newDate 0 0 0 0 0 0 $timezone).Location)).Format "üìÖ`02.1.06` ‚åö`15:04:05`"))
	"color" 0xbf172e
	"timestamp" $ctime
	"footer" (sdict "text" (print "Time calculated in timezone " $timezone)))}}
{{end}}
{{$dbtime := $ctime.Add (toDuration (mult 90 .TimeSecond))}}
{{dbSet 204255221017214977 "downtime" $dbtime}}